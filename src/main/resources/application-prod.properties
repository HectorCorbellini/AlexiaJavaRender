# application-prod.properties
# Configuración específica para entorno de PRODUCCIÓN (Render)

# ============================================
# CONFIGURACIÓN DE BASE DE DATOS (Render/Supabase)
# ============================================
# Usar variables separadas para evitar problemas con caracteres especiales
spring.datasource.url=jdbc:postgresql://${DB_HOST:db.hgcesbylhkjoxtymxysy.supabase.co}:${DB_PORT:5432}/${DB_NAME:postgres}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration - Optimizada para producción
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging - Nivel INFO para producción (menos verboso)
logging.level.com.alexia=INFO
logging.level.org.springframework=WARN
logging.level.org.telegram=WARN
logging.level.org.hibernate=WARN

# Vaadin - Configuración segura para producción
vaadin.launch-browser=false
vaadin.whitelisted-packages=com.alexia
vaadin.productionMode=true

# ============================================
# CONFIGURACIÓN DEL SERVIDOR (Render)
# ============================================
server.port=${PORT:8080}
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# ============================================
# CONFIGURACIÓN DE TELEGRAM
# ============================================
bot.token=${TELEGRAM_BOT_TOKEN}

# Management endpoints - Solo health para producción
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never

# Production specific settings
app.environment=production
app.version=1.0.0-prod

# Database connection pool - Configuración para producción
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
